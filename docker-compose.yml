services:
  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: unless-stopped
    networks: [appnet]
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=lianel

  db-service:
    build:
      context: ./api/dbservice
    image: db-service
    container_name: db-service
    restart: unless-stopped
    networks: [appnet]
    expose:
      - "8082"
    environment:
      # Spring Boot port inside container
      - SERVER_PORT=8082
      # Mongo inside compose network
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/lianel?directConnection=true
      - SPRING_DATA_MONGODB_DATABASE=lianel
      # If you use migrations folder in the image/container
      - MIGRATIONS_DIR=/migrations
    depends_on:
      - mongo

  profile-api:
    build:
      context: ./api/profile
    image: profile-api
    container_name: profile-api
    restart: unless-stopped
    networks: [appnet]
    expose:
      - "8081"
    environment:
      - SERVER_PORT=8081
      # Where profile-api calls the db-service
      - DBSERVICE_BASEURL=http://db-service:8082
      # (Profile does NOT connect to Mongo directly anymore)
      # Keeping for compatibility if your code still references them:
      # - SPRING_DATA_MONGODB_URI=
      # - SPRING_DATA_MONGODB_DATABASE=
      - MIGRATIONS_DIR=/migrations
    depends_on:
      - db-service

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx-box
    restart: unless-stopped
    networks: [appnet]
    depends_on:
      - profile-api
      - db-service
    # Local/dev HTTPS (self-signed or mkcert)
    ports:
      - "8443:8443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/tls:/etc/nginx/tls:ro

  # === NEW: Traefik reverse proxy + ACME (Let's Encrypt) on 80/443 ===
  traefik:
    image: traefik
    container_name: traefik
    restart: always
    networks: [appnet]
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # === NEW: n8n behind Traefik ===
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    networks: [appnet]
    # local port not strictly needed when fronted by Traefik, but keeping for localhost access:
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_RUNNERS_ENABLED=true
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files

networks:
  appnet: {}

volumes:
  mongo_data: {}
  traefik_data: {}
  n8n_data: {}