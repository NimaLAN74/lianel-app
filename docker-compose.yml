version: "3.9"

services:
  profile-api:
    build:
      context: ./api/profile
    image: profile-api
    container_name: profile-api
    environment:
      SERVER_PORT: 8081
      DBSERVICE_BASEURL: http://db-service:8082
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/mini?directConnection=true
      SPRING_DATA_MONGODB_DATABASE: mini
    expose:
      - "8081"
    depends_on:
      db-service:
        condition: service_started
      mongo:
        condition: service_healthy
    restart: unless-stopped

  db-service:
    build:
      context: ./api/dbservice
    image: db-service
    container_name: db-service
    environment:
      SERVER_PORT: 8082
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/mini?directConnection=true
      SPRING_DATA_MONGODB_DATABASE: mini
    expose:
      - "8082"
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped

  finance-service:
    build:
      context: ./api/financeservice
    image: finance-service
    container_name: finance-service
    environment:
      SERVER_PORT: 8083
      DBSERVICE_BASEURL: http://db-service:8082
      DBSERVICE_FINANCEPATH: /finance
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/mini?directConnection=true
      SPRING_DATA_MONGODB_DATABASE: mini
    expose:
      - "8083"
    depends_on:
      db-service:
        condition: service_started
      mongo:
        condition: service_healthy
    restart: unless-stopped

  web:
    image: node:20-alpine
    container_name: web
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    environment:
      VITE_API_ORIGIN: https://localhost:8443
    volumes:
      - ./web:/app
      - /app/node_modules
    expose:
      - "5173"
    restart: unless-stopped

  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_RUNNERS_ENABLED=true
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files

  mongo:
    image: mongo:7.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 }).ok' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 15
    restart: unless-stopped

  proxy:
    image: nginx:1.27-alpine
    container_name: proxy
    depends_on:
      - profile-api
      - db-service
      - finance-service
      - web
      - n8n
    ports:
      - "8443:8443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/tls:/etc/nginx/tls:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- https://localhost:8443/healthz --no-check-certificate || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data:
  n8n_data:
  traefik_data: